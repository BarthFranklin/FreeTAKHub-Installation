[
  {
    "id": "9c3be5f3.90e288",
    "type": "tab",
    "label": "SALUTE",
    "disabled": false,
    "info": "",
    "env": []
  },
  {
    "id": "e81402f5.f8254",
    "type": "tab",
    "label": "FTH VideoChecker",
    "disabled": false,
    "info": "This flow checks the simple-RTSP video service using the API and parses the active paths.\nWhen a path is present, it creates a video endpoint to FTS.\nFTS sends the video to all the connected TAK devices.\nEndpoints with the same name will be updated."
  },
  {
    "id": "c3abc391.1d58",
    "type": "ui_group",
    "name": "SALUTE Form",
    "tab": "5809210.24f5ce",
    "order": 1,
    "disp": true,
    "width": "12",
    "collapse": false
  },
  {
    "id": "5809210.24f5ce",
    "type": "ui_tab",
    "name": "FTS Forms",
    "icon": "dashboard",
    "disabled": false,
    "hidden": false
  },
  {
    "id": "72983f63c8fade07",
    "type": "ui_base",
    "theme": {
      "name": "theme-light",
      "lightTheme": {
        "default": "#0094CE",
        "baseColor": "#0094CE",
        "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
        "edited": false
      },
      "darkTheme": {
        "default": "#097479",
        "baseColor": "#097479",
        "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
        "edited": false
      },
      "customTheme": {
        "name": "Untitled Theme 1",
        "default": "#4B7930",
        "baseColor": "#4B7930",
        "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
      },
      "themeState": {
        "base-color": {
          "default": "#0094CE",
          "value": "#0094CE",
          "edited": false
        },
        "page-titlebar-backgroundColor": {
          "value": "#0094CE",
          "edited": false
        },
        "page-backgroundColor": {
          "value": "#fafafa",
          "edited": false
        },
        "page-sidebar-backgroundColor": {
          "value": "#ffffff",
          "edited": false
        },
        "group-textColor": {
          "value": "#1bbfff",
          "edited": false
        },
        "group-borderColor": {
          "value": "#ffffff",
          "edited": false
        },
        "group-backgroundColor": {
          "value": "#ffffff",
          "edited": false
        },
        "widget-textColor": {
          "value": "#111111",
          "edited": false
        },
        "widget-backgroundColor": {
          "value": "#0094ce",
          "edited": false
        },
        "widget-borderColor": {
          "value": "#ffffff",
          "edited": false
        },
        "base-font": {
          "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
        }
      },
      "angularTheme": {
        "primary": "indigo",
        "accents": "blue",
        "warn": "red",
        "background": "grey",
        "palette": "light"
      }
    },
    "site": {
      "name": "Node-RED Dashboard",
      "hideToolbar": "false",
      "allowSwipe": "false",
      "lockMenu": "false",
      "allowTempTheme": "true",
      "dateFormat": "DD/MM/YYYY",
      "sizes": {
        "sx": 48,
        "sy": 48,
        "gx": 6,
        "gy": 6,
        "cx": 6,
        "cy": 6,
        "px": 0,
        "py": 0
      }
    }
  },
  {
    "id": "3db9bf25.a5ca2",
    "type": "ui_form",
    "z": "9c3be5f3.90e288",
    "name": "form",
    "label": "SALUTE",
    "group": "c3abc391.1d58",
    "order": 0,
    "width": 0,
    "height": 0,
    "options": [
      {
        "label": "Report Name",
        "value": "name",
        "type": "text",
        "required": true,
        "rows": null
      },
      {
        "label": "Location",
        "value": "address",
        "type": "text",
        "required": true,
        "rows": null
      },
      {
        "label": "Callsign",
        "value": "userCallsign",
        "type": "text",
        "required": false,
        "rows": null
      },
      {
        "label": "report Date",
        "value": "dateTime",
        "type": "date",
        "required": true,
        "rows": null
      },
      {
        "label": "TimeObserved",
        "value": "time",
        "type": "text",
        "required": false,
        "rows": null
      },
      {
        "label": "Duration of Even",
        "value": "Duration",
        "type": "text",
        "required": false,
        "rows": null
      },
      {
        "label": "event Scale",
        "value": "eventScale",
        "type": "text",
        "required": false,
        "rows": null
      },
      {
        "label": "Type",
        "value": "type",
        "type": "text",
        "required": false,
        "rows": null
      },
      {
        "label": "Equipment",
        "value": "equipment",
        "type": "text",
        "required": false,
        "rows": null
      },
      {
        "label": "status",
        "value": "status",
        "type": "text",
        "required": false,
        "rows": null
      },
      {
        "label": "Size",
        "value": "size",
        "type": "number",
        "required": false,
        "rows": null
      },
      {
        "label": "Importance",
        "value": "importance",
        "type": "text",
        "required": false,
        "rows": null
      },
      {
        "label": "Activity",
        "value": "activity",
        "type": "multiline",
        "required": true,
        "rows": 3
      },
      {
        "label": "Unit Identification",
        "value": "Identification",
        "type": "text",
        "required": false,
        "rows": null
      },
      {
        "label": "Assessed Threats",
        "value": "AssessedThreats",
        "type": "text",
        "required": false,
        "rows": null
      },
      {
        "label": "MethodOfDetection",
        "value": "Method",
        "type": "text",
        "required": false,
        "rows": null
      },
      {
        "label": "Surveillance Type",
        "value": "SurveillanceType",
        "type": "text",
        "required": false,
        "rows": null
      },
      {
        "label": "Final Remarks",
        "value": "FinalRemarks",
        "type": "text",
        "required": false,
        "rows": null
      }
    ],
    "formValue": {
      "name": "",
      "address": "",
      "userCallsign": "",
      "dateTime": "",
      "time": "",
      "Duration": "",
      "eventScale": "",
      "type": "",
      "equipment": "",
      "status": "",
      "size": "",
      "importance": "",
      "activity": "",
      "Identification": "",
      "AssessedThreats": "",
      "Method": "",
      "SurveillanceType": "",
      "FinalRemarks": ""
    },
    "payload": "",
    "submit": "submit",
    "cancel": "cancel",
    "topic": "topic",
    "topicType": "msg",
    "splitLayout": true,
    "className": "",
    "x": 230,
    "y": 160,
    "wires": [
      [
        "b141c7b.7bd5138",
        "12195b34.dece55"
      ]
    ]
  },
  {
    "id": "1bde6131.aeec3f",
    "type": "debug",
    "z": "9c3be5f3.90e288",
    "name": "",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "targetType": "full",
    "statusVal": "",
    "statusType": "auto",
    "x": 910,
    "y": 160,
    "wires": []
  },
  {
    "id": "2d8912f5.e50c8e",
    "type": "http request",
    "z": "9c3be5f3.90e288",
    "name": "",
    "method": "POST",
    "ret": "txt",
    "paytoqs": "body",
    "url": "http://204.48.30.216:19023/ManageKML/postKML",
    "tls": "",
    "persist": false,
    "proxy": "",
    "authType": "bearer",
    "senderr": false,
    "x": 670,
    "y": 220,
    "wires": [
      [
        "1bde6131.aeec3f",
        "573bdb94.029964"
      ]
    ]
  },
  {
    "id": "b141c7b.7bd5138",
    "type": "function",
    "z": "9c3be5f3.90e288",
    "name": "Create rest",
    "func": "msg.payload ={\n  name: msg.payload.name,\n address: msg.payload.address,\n  body :{\n  userCallsign: msg.payload.userCallsign,\n  dateTime: msg.payload.dateTime,\n  TimeObserved: msg.payload.time,\n  MethodOfDetection: msg.payload.Method,\n  SurveillanceType: msg.payload.SurveillanceType,\n  DurationofEvent: msg.payload.Duration,\n  eventScale: msg.payload.eventScale,\n  type: msg.payload.type,\n  Size:msg.payload.size,\n  Equipment: msg.payload.equipment,\n  activity: msg.payload.activity,\n  importance: msg.payload.importance,\n  status: msg.payload.status,\n  Identification: msg.payload.Identification,\n  AssessedThreats: msg.payload.AssessedThreats,\n  FinalRemarks: msg.payload.FinalRemarks\n}\n}\n\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 480,
    "y": 220,
    "wires": [
      [
        "2d8912f5.e50c8e",
        "f14ea69be158a681"
      ]
    ]
  },
  {
    "id": "573bdb94.029964",
    "type": "ui_toast",
    "z": "9c3be5f3.90e288",
    "position": "top right",
    "displayTime": "5",
    "highlight": "",
    "sendall": true,
    "outputs": 0,
    "ok": "OK",
    "cancel": "",
    "raw": false,
    "topic": "",
    "name": "",
    "x": 880,
    "y": 260,
    "wires": []
  },
  {
    "id": "12195b34.dece55",
    "type": "debug",
    "z": "9c3be5f3.90e288",
    "name": "",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 480,
    "y": 120,
    "wires": []
  },
  {
    "id": "f14ea69be158a681",
    "type": "debug",
    "z": "9c3be5f3.90e288",
    "name": "REST",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "payload",
    "targetType": "msg",
    "statusVal": "",
    "statusType": "auto",
    "x": 680,
    "y": 120,
    "wires": []
  },
  {
    "id": "700f174cb7e69abe",
    "type": "comment",
    "z": "9c3be5f3.90e288",
    "name": "Customize this!",
    "info": "",
    "x": 660,
    "y": 340,
    "wires": []
  },
  {
    "id": "2a7e77e7.a92748",
    "type": "http request",
    "z": "e81402f5.f8254",
    "name": "Post Video to FTS",
    "method": "POST",
    "ret": "txt",
    "paytoqs": "ignore",
    "url": "http://{{ videoserver_public_ipv4 }}:19023/ManageVideoStream/postVideoStream",
    "tls": "",
    "persist": false,
    "proxy": "",
    "authType": "bearer",
    "credentials": {
            "password": "token"
        },"credentials": {
        "password": "token"
    },
    "x": 970,
    "y": 240,
    "wires": [
      [
        "25874402.182cec",
        "f8da2c2e.b2fb3"
      ]
    ]
  },
  {
    "id": "25874402.182cec",
    "type": "switch",
    "z": "e81402f5.f8254",
    "name": "check return",
    "property": "statusCode",
    "propertyType": "msg",
    "rules": [
      {
        "t": "eq",
        "v": "200",
        "vt": "str"
      },
      {
        "t": "eq",
        "v": "500",
        "vt": "str"
      },
      {
        "t": "eq",
        "v": "401",
        "vt": "str"
      }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 3,
    "x": 1310,
    "y": 240,
    "wires": [
      [
        "791450ee.61b5a"
      ],
      [
        "1b6de090.e2467f"
      ],
      [
        "a48bd58e.401dc8"
      ]
    ]
  },
  {
    "id": "791450ee.61b5a",
    "type": "debug",
    "z": "e81402f5.f8254",
    "name": "Success!",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "payload",
    "targetType": "msg",
    "statusVal": "",
    "statusType": "auto",
    "x": 1520,
    "y": 200,
    "wires": []
  },
  {
    "id": "1b6de090.e2467f",
    "type": "debug",
    "z": "e81402f5.f8254",
    "name": " INTERNAL SERVER ERROR",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "payload",
    "targetType": "msg",
    "statusVal": "",
    "statusType": "auto",
    "x": 1590,
    "y": 240,
    "wires": []
  },
  {
    "id": "a48bd58e.401dc8",
    "type": "debug",
    "z": "e81402f5.f8254",
    "name": "Non authorized",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "payload",
    "targetType": "msg",
    "statusVal": "",
    "statusType": "auto",
    "x": 1520,
    "y": 300,
    "wires": []
  },
  {
    "id": "41b82d8d.8266e4",
    "type": "function",
    "z": "e81402f5.f8254",
    "name": "CreateVideoStream",
    "func": "\n  msg.addr =  global.get('FTH_FTS_URL');\n  msg.port = global.get('FTH_FTS_API_Port');\n  msg.streamPort = global.get('FTH_FTS_STREAM_Port');\n  msg.streamAddress =  global.get('FTH_FTS_VIDEO_URL');\n  let streamPath =  msg.payload;\n  let  alias =  msg.payload;\n  let streamProtocol= \"rtsp\";\n\n \n\nmsg.payload = [];\n\n msg.payload={\n     alias: alias,\n     streamProtocol: streamProtocol,\n     streamAddress:  msg.streamAddress,\n     streamPort: msg.streamPort ,\n     streamPath: streamPath,\n };\n    \nreturn msg;\n\n",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 730,
    "y": 280,
    "wires": [
      [
        "2a7e77e7.a92748",
        "351711f.8aa5aee"
      ]
    ]
  },
  {
    "id": "351711f.8aa5aee",
    "type": "debug",
    "z": "e81402f5.f8254",
    "name": "Rest Payload",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "payload",
    "targetType": "msg",
    "statusVal": "",
    "statusType": "auto",
    "x": 970,
    "y": 300,
    "wires": []
  },
  {
    "id": "f8da2c2e.b2fb3",
    "type": "debug",
    "z": "e81402f5.f8254",
    "name": "",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "targetType": "full",
    "statusVal": "",
    "statusType": "auto",
    "x": 1150,
    "y": 180,
    "wires": []
  },
  {
    "id": "529fdac2.273054",
    "type": "http request",
    "z": "e81402f5.f8254",
    "name": "Connect to RTSP server",
    "method": "GET",
    "ret": "obj",
    "paytoqs": "ignore",
    "url": "http://{{ videoserver_public_ipv4 }}:9997/v1/paths/list",
    "tls": "",
    "persist": false,
    "proxy": "",
    "authType": "",
    "x": 490,
    "y": 160,
    "wires": [
      [
        "801fd65f.5be7d8",
        "70339513.554ecc"
      ]
    ]
  },
  {
    "id": "801fd65f.5be7d8",
    "type": "debug",
    "z": "e81402f5.f8254",
    "name": "received from JSON",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "targetType": "full",
    "statusVal": "",
    "statusType": "auto",
    "x": 540,
    "y": 80,
    "wires": []
  },
  {
    "id": "5812cb15.cd4b04",
    "type": "inject",
    "z": "e81402f5.f8254",
    "name": "start",
    "props": [
      {
        "p": "addr",
        "v": "",
        "vt": "date"
      }
    ],
    "repeat": "120",
    "crontab": "",
    "once": false,
    "onceDelay": 0.1,
    "topic": "",
    "payloadType": "str",
    "x": 110,
    "y": 80,
    "wires": [
      [
        "ab5e51e8.e29b5"
      ]
    ]
  },
  {
    "id": "e7eb8030.427a4",
    "type": "switch",
    "z": "e81402f5.f8254",
    "name": "check streams",
    "property": "payload.source",
    "propertyType": "msg",
    "rules": [
      {
        "t": "nempty"
      },
      {
        "t": "null"
      },
      {
        "t": "eq",
        "v": "",
        "vt": "str"
      }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 3,
    "x": 600,
    "y": 400,
    "wires": [
      [],
      [
        "7fc68a9f.e82fe4"
      ],
      []
    ]
  },
  {
    "id": "7fc68a9f.e82fe4",
    "type": "debug",
    "z": "e81402f5.f8254",
    "name": "no stream!",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "targetType": "full",
    "statusVal": "",
    "statusType": "auto",
    "x": 830,
    "y": 440,
    "wires": []
  },
  {
    "id": "b6661f0d.790e8",
    "type": "debug",
    "z": "e81402f5.f8254",
    "name": "after split",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "payload",
    "targetType": "msg",
    "statusVal": "",
    "statusType": "auto",
    "x": 520,
    "y": 460,
    "wires": []
  },
  {
    "id": "70339513.554ecc",
    "type": "split",
    "z": "e81402f5.f8254",
    "name": "",
    "splt": "\\n",
    "spltType": "str",
    "arraySplt": 1,
    "arraySpltType": "len",
    "stream": false,
    "addname": "",
    "x": 710,
    "y": 160,
    "wires": [
      [
        "ce49e6a3.280768",
        "7714b387.25136c"
      ]
    ]
  },
  {
    "id": "90676aac.d49f98",
    "type": "split",
    "z": "e81402f5.f8254",
    "name": "",
    "splt": "\\n",
    "spltType": "str",
    "arraySplt": 1,
    "arraySpltType": "len",
    "stream": false,
    "addname": "",
    "x": 410,
    "y": 420,
    "wires": [
      [
        "b6661f0d.790e8",
        "e7eb8030.427a4"
      ]
    ]
  },
  {
    "id": "ab5e51e8.e29b5",
    "type": "function",
    "z": "e81402f5.f8254",
    "name": "getVideoStream",
    "func": "\n  msg.addr =  global.get('FTH_FTS_VIDEO_URL');\n  msg.port = global.get('FTH_FTS_VIDEO_API_PORT');\n \n    \nreturn msg;\n\n",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 280,
    "y": 80,
    "wires": [
      [
        "529fdac2.273054"
      ]
    ]
  },
  {
    "id": "cb4abca3.6a73d",
    "type": "config",
    "z": "e81402f5.f8254",
    "name": "FTH Global Config",
    "properties": [
      {
        "p": "FTH_FTS_URL",
        "pt": "global",
        "to": "{{ fts_ipv4 }}",
        "tot": "str"
      },
      {
        "p": "FTH_FTS_TCP_Port",
        "pt": "global",
        "to": "8087",
        "tot": "str"
      },
      {
        "p": "FTH_FTS_API_Port",
        "pt": "global",
        "to": "19023",
        "tot": "str"
      },
      {
        "p": "FTH_FTS_API_Auth",
        "pt": "global",
        "to": "{{ noderedserver_token }}",
        "tot": "str"
      },
      {
        "p": "FTH_FTS_STREAM_Port",
        "pt": "global",
        "to": "8554",
        "tot": "str"
      },
      {
        "p": "FTH_FTS_VIDEO_URL",
        "pt": "global",
        "to": "{{ videoserver_public_ipv4 }}",
        "tot": "str"
      },
      {
        "p": "FTH_FTS_VIDEO_API_PORT",
        "pt": "global",
        "to": "9997",
        "tot": "str"
      }
    ],
    "active": true,
    "x": 150,
    "y": 160,
    "wires": []
  },
  {
    "id": "ce49e6a3.280768",
    "type": "debug",
    "z": "e81402f5.f8254",
    "name": "conf name",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "payload",
    "targetType": "msg",
    "statusVal": "",
    "statusType": "auto",
    "x": 770,
    "y": 60,
    "wires": []
  },
  {
    "id": "7714b387.25136c",
    "type": "function",
    "z": "e81402f5.f8254",
    "name": "",
    "func": "\nnode.warn(Object.keys(msg.payload).length);\nfor (let i = 0; i < Object.keys(msg.payload).length; i++) { \n // node.warn(Object.keys(msg.payload)[i])\n  if (Object.values(msg.payload)[i].source){\n        msg.payload = \"/\"+Object.keys(msg.payload)[i]\n        node.send(msg)\n  }\n}\nreturn;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 860,
    "y": 160,
    "wires": [
      [
        "41b82d8d.8266e4",
        "b6146596.a3aeb8"
      ]
    ]
  },
  {
    "id": "b6146596.a3aeb8",
    "type": "debug",
    "z": "e81402f5.f8254",
    "name": "after function",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "payload",
    "targetType": "msg",
    "statusVal": "",
    "statusType": "auto",
    "x": 1010,
    "y": 80,
    "wires": []
  },
  {
    "id": "bfadd2cc.7c368",
    "type": "inject",
    "z": "e81402f5.f8254",
    "name": "",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "",
    "crontab": "",
    "once": false,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 390,
    "y": 520,
    "wires": [
      [
        "a4bc3376.a38dd"
      ]
    ]
  },
  {
    "id": "a4bc3376.a38dd",
    "type": "function",
    "z": "e81402f5.f8254",
    "name": "",
    "func": "var colors=[\"red\",\"blue\",\"green\"];\nfor (let i = 0; i < colors.length; i++) { \n  msg.payload = colors[i]\n  node.send(msg);\n}\nreturn;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 580,
    "y": 520,
    "wires": [
      [
        "c290bbb3.401e98"
      ]
    ]
  },
  {
    "id": "c290bbb3.401e98",
    "type": "debug",
    "z": "e81402f5.f8254",
    "name": "",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 790,
    "y": 520,
    "wires": []
  }
]
