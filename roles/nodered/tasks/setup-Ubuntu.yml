---
- name: wait for lock-frontend release
  shell: >
    while fuser /var/lib/dpkg/lock-frontend >
    /dev/null 2>&1;
    do sleep 3; done;
  changed_when: false

- name: Install apt dependencies
  apt:
    name: "{{ item }}"
  loop: "{{ nodered_apt_dependencies | list }}"

- name: Install packages with npm
  npm:
    name: "{{ item }}"
    global: true
    unsafe_perm: true
  loop: "{{ nodered_npm_packages | list }}"

- name: Install Node-RED nodes with npm
  npm:
    name: "{{ item }}"
    path: "{{ nodered_install_folder }}"
  loop: "{{ nodered_nodes | list }}"

- name: Create flows directory
  file:
    path: "{{ nodered_install_folder }}/lib/flows"
    state: directory
    mode: 0755

- name: Template unit file
  template:
    src: nodered.service.j2
    dest: "{{ unit_files_location }}/{{ nodered_service_name }}.service"
    owner: root
    group: root
    mode: 0644


- name: Enable service
  service:
    name: "{{ nodered_service_name }}"
    enabled: true
    use: systemd
  register: enable_nodered_state
  retries: 20
  until: enable_nodered_state is success

- name: Template settings file
  template:
    src: settings.js.j2
    dest: "{{ nodered_install_folder }}/{{ nodered_settings_file }}"
    owner: root
    group: root
    mode: 0644

- name: Set service state
  service:
    name: "{{ nodered_service_name }}"
    state: restarted
    use: systemd
  register: set_nodered_state
  retries: 20
  until:
    - set_nodered_state is success
    - set_nodered_state.status.ActiveState == "active"

- name: "Template backup Node-RED flows"
  template:
    src: "{{ item }}.j2"
    dest: "{{ nodered_install_folder }}/lib/flows/{{ item }}"
    owner: root
    group: root
    mode: 0644
  loop: "{{ nodered_flows }}"

- name: "Template flows.json to /tmp/flows.json"
  template:
    src: "flows.json.j2"
    dest: "/tmp/flows.json"
    owner: root
    group: root
    mode: 0644
